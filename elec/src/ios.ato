from "generics/interfaces.ato" import Power, CAN, I2C, Pair, USB2
from "xt-connectors/xt-connectors.ato" import XT30_Male_Right_Angle
from "usb-connectors/usb-connectors.ato" import USBCConn
from "qwiic-connectors/elec/src/qwiic-connectors.ato" import QwiicConnector
from "jst-gh/elec/src/jst-gh.ato" import JSTGH4Pin
from "sk6805side/elec/src/sk6805side.ato" import SK6805SIDE
from "generics/buttons.ato" import ButtonPulldown, ButtonSKTDLDE010
from "generics/vdivs.ato" import VDiv, VDivLowPassFilter
from "generics/resistors.ato" import Resistor


module IOs:
    power_batt = new Power
    power_usb = new Power
    power5v = new Power
    power3v3 = new Power
    i2c = new I2C
    can = new CAN
    button = new Pair
    led = new Pair
    usb2 = new USB2
    out_a = new Pair
    out_b = new Pair
    out_c = new Pair
    batt_sense = new Pair
    temp_sense = new Pair

    # Connectors
    usbc_connector = new USBCConn
    xt30_connector_1 = new XT30_Male_Right_Angle
    xt30_connector_2 = new XT30_Male_Right_Angle
    i2c_connector = new QwiicConnector
    can_connector_1 = new JSTGH4Pin
    can_connector_2 = new JSTGH4Pin

    #Sensors
    voltage_sense = new VDivLowPassFilter
    temperature_sense = new VDivLowPassFilter

    # Phase outputs
    pad_out_a = new PowerPad
    pad_out_b = new PowerPad
    pad_out_c = new PowerPad

    # LEDs
    led1 = new SK6805SIDE
    led2 = new SK6805SIDE

    # Button
    button_pulldown = new ButtonPulldown
    button_pulldown.btn -> ButtonSKTDLDE010

    # Power connections
    power_batt ~ xt30_connector_1.power
    power_batt ~ xt30_connector_2.power
    power_batt ~ voltage_sense.power
    power_usb ~ usbc_connector.power
    power5v ~ led1.power
    power5v ~ led2.power
    power5v ~ can_connector_1.power
    power5v ~ can_connector_2.power
    power3v3 ~ i2c_connector.power
    power3v3 ~ button_pulldown.power
    power3v3 ~ temperature_sense.power

    power_usb.gnd ~ power3v3.gnd

    # Sensor config
    voltage_sense.v_in = 30V
    voltage_sense.v_out = 3V +/- 5%

    # Manually selecting parts, but providing values for checks
    temperature_sense.v_in = 3.3V
    temperature_sense.v_out = 1.65V +/- 5%
    temperature_sense.r_top.value = 10kohm +/- 1%
    temperature_sense.r_bottom -> NCP15XH103F03RC # NTC Thermistor

    voltage_sense.i_q = 10uA to 1mA
    temperature_sense.i_q = 10uA to 1mA

    # Filter out switching noise from phases + buck converter (both 10kHz +)
    voltage_sense.cutoff_frequency = 50Hz to 200Hz
    temperature_sense.cutoff_frequency = 100Hz to 200Hz

    voltage_sense.cap.voltage = 30V to 100V

    temp_sense ~ temperature_sense.output
    batt_sense ~ voltage_sense.output

    # Data connections
    usb2 ~ usbc_connector.usb2
    i2c ~ i2c_connector.i2c
    can ~ can_connector_1.can
    can ~ can_connector_2.can

    # LED connections
    led ~ led1.data_in
    led1.data_out ~ led2.data_in

    # Button connections
    button ~ button_pulldown.output

    # Output connections
    out_a ~ pad_out_a.output
    out_b ~ pad_out_b.output
    out_c ~ pad_out_c.output


component PowerPad:
    output = new Pair
    output.io ~ pin 1
    footprint = "lib:OutputPad"
    mpn = "OutputPad"

component NCP15XH103F03RC from Resistor:
    """
    Thermistor NTC
    """
    footprint = "R0402"
    # mpn = "NCP15XH103F03RC"
    mpn = "C77131"
    lcsc = "C77131"
    beta = 3380K
    value = 10kohm +/- 1%
